// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  email String @unique
  username String
  isAdmin     Boolean @default(false)
  avatar String?
  writtenPosts Post[] @relation("writtenPosts")
  likedPosts Post[] @relation("likedPosts")
  comments Comment[]
}

model Post {
  id String @id @default(uuid())
  content String
  mediaUrl   String?
  isHidden Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author User @relation("writtenPosts", fields: [authorId], references: [id], onDelete: Cascade)
  authorId String
  likedBy    User[]     @relation("likedPosts")
  comments   Comment[]
}

model Comment {
  id String @id @default(uuid())
  content String
  mediaUrl   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author     User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId   String
  post       Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId     String
}